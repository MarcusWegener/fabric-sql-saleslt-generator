-- Step 1: Create a temporary table to hold generated sales order data
CREATE TABLE #NewSalesOrders (
    SalesOrderID INT,
    CustomerID INT,
    ShipToAddressID INT,
    BillToAddressID INT,
    ProductID INT,
    Quantity INT,
    UnitPrice MONEY,
    OrderDate DATETIME
);

-- Step 2: Generate 100,000 random sales order rows with unique SalesOrderID using ROW_NUMBER
WITH BaseData AS (
    SELECT
        ROW_NUMBER() OVER (ORDER BY NEWID()) + 100000 AS SalesOrderID,
        c.CustomerID,
        ca.AddressID AS ShipToAddressID,
        ca.AddressID AS BillToAddressID,
        p.ProductID,
        1 + ABS(CHECKSUM(NEWID())) % 5 AS Quantity,
        p.ListPrice AS UnitPrice,
        DATEADD(DAY, -ABS(CHECKSUM(NEWID())) % (365 * 3), GETDATE()) AS OrderDate
    FROM SalesLT.Customer c
    JOIN SalesLT.CustomerAddress ca ON c.CustomerID = ca.CustomerID
    JOIN SalesLT.Product p ON p.SellStartDate IS NOT NULL
)
INSERT INTO #NewSalesOrders
SELECT TOP 100000 *
FROM BaseData;

-- Step 3: Insert unique sales orders into SalesOrderHeader based on generated data
INSERT INTO SalesLT.SalesOrderHeader (
    SalesOrderID, RevisionNumber, OrderDate, DueDate, ShipDate, Status,
    OnlineOrderFlag, PurchaseOrderNumber, AccountNumber,
    CustomerID, ShipToAddressID, BillToAddressID, ShipMethod,
    SubTotal, TaxAmt, Freight, Comment
)
SELECT
    nso.SalesOrderID,
    1,
    nso.OrderDate,
    DATEADD(DAY, 7, nso.OrderDate),
    DATEADD(DAY, 3, nso.OrderDate),
    5,
    1,
    'PO' + CAST(ABS(CHECKSUM(NEWID())) % 10000 AS VARCHAR),
    '10-4020-' + RIGHT('000000' + CAST(nso.CustomerID AS VARCHAR), 6),
    nso.CustomerID,
    nso.ShipToAddressID,
    nso.BillToAddressID,
    'STANDARD',
    0, 0, 0,
    'Generated by Script'
FROM #NewSalesOrders nso;

-- Step 4: Insert corresponding line items into SalesOrderDetail
INSERT INTO SalesLT.SalesOrderDetail (
    SalesOrderID, OrderQty, ProductID, UnitPrice, UnitPriceDiscount
)
SELECT
    SalesOrderID,
    Quantity,
    ProductID,
    UnitPrice,
    0
FROM #NewSalesOrders;

-- Step 5: Update calculated totals (SubTotal, TaxAmt, Freight) in SalesOrderHeader
UPDATE h
SET 
    SubTotal = d.Total,
    TaxAmt = d.Total * 0.08,
    Freight = d.Total * 0.05
FROM SalesLT.SalesOrderHeader h
JOIN (
    SELECT SalesOrderID, SUM(OrderQty * UnitPrice) AS Total
    FROM SalesLT.SalesOrderDetail
    GROUP BY SalesOrderID
) d ON h.SalesOrderID = d.SalesOrderID
WHERE h.Comment = 'Generated by Script';

-- Step 6: Optional cleanup - delete the generated test data (if needed later)
-- First delete SalesOrderDetail rows that reference the generated SalesOrderIDs
DELETE FROM SalesLT.SalesOrderDetail
WHERE SalesOrderID IN (
    SELECT SalesOrderID FROM SalesLT.SalesOrderHeader WHERE Comment = 'Generated by Script'
);

-- Then delete the corresponding SalesOrderHeader rows
DELETE FROM SalesLT.SalesOrderHeader
WHERE Comment = 'Generated by Script';

-- Step 7: Drop the temporary table used for staging the data
DROP TABLE #NewSalesOrders;
